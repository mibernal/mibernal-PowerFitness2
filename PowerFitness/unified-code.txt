

/* src\app\components\auth\login-form\login-form.component.html */

<!-- login-form.component.html -->
<div class="form-container">
  <h1>Formulario de Ingreso</h1>
  <form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
    <div>
      <label for="email">Email:</label>
      <input type="email" id="email" formControlName="email">
      <div *ngIf="loginForm.get('email')?.errors?.['required']">Se requiere un Email.</div>
      <div *ngIf="loginForm.get('email')?.errors?.['email']">Formato Invalido.</div>
    </div>
    <div>
      <label for="password">Contraseña:</label>
      <input type="password" id="password" formControlName="password">
      <div *ngIf="loginForm.get('password')?.errors?.['required']">Es necesaria una Contraseña.</div>
    </div>
    <button type="submit" [disabled]="loginForm.invalid || isSubmitting">Ingresar</button>
    <hr>
    <div class="google-btn" (click)="googleLogin()" [hidden]="isSubmitting">Ingresar con Google</div>
    <div class="facebook-btn" (click)="facebookLogin()" [hidden]="isSubmitting">Ingresar con Facebook</div>
  </form>

  <div *ngIf="!isRegistrationEnabled && !isSubmitting" class="error-message">
    No se permite el inicio de sesión. Por favor, regístrate antes de iniciar sesión.
    <a (click)="redirectToRegistration()">Regístrate aquí</a>
  </div>

  <div *ngIf="isSubmitting" class="loading-message">
    Iniciando sesión...
  </div>
</div>


/* src\app\components\auth\login-form\login-form.component.scss */

@import '../../../../../node_modules/bootstrap/scss/bootstrap.scss';
@import '~bootstrap/dist/css/bootstrap.min.css';

.form-container {
  display: flex;
  flex-direction: column;
  align-items: center;

  h1 {
    font-size: 24px;
    margin-bottom: 20px;
  }

  form {
    display: flex;
    flex-direction: column;
    align-items: center;

    div {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 20px;

      label {
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 10px;
      }

      input[type="email"],
      input[type="password"] {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border-radius: 5px;
        border: 1px solid #ccc;

        &:focus {
          outline: none;
          border-color: #4CAF50;
        }
      }

      div.error {
        color: red;
        margin-top: 5px;
        font-size: 14px;
      }
    }

    button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px 20px;
      font-size: 16px;
      border-radius: 5px;
      border: none;
      cursor: pointer;

      &:disabled {
        opacity: 0.5;
        cursor: default;
      }
    }

    .google-btn, .facebook-btn {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 40px;
      color: white;
      font-size: 16px;
      font-weight: bold;
      border-radius: 5px;
      cursor: pointer;
    }
    
    .google-btn {
      background-color: #DB4437;
      margin-bottom: 10px;
    
      &:hover {
        background-color: #D82018;
      }
    }
    
    .facebook-btn {
      background-color: #3B5998;
    
      &:hover {
        background-color: #2F477A;
      }
    }    
  }
}


/* src\app\components\auth\registration-form\registration-form.component.html */

<div class="form-container">
  <h1>Formulario de Registro</h1>
  <form [formGroup]="registrationForm" (ngSubmit)="onSubmit()">
    <div>
      <label for="firstName">Nombres:</label>
      <input type="text" id="firstName" formControlName="firstName">
      <div *ngIf="registrationForm.get('firstName')?.invalid && registrationForm.get('firstName')?.touched">
        <div *ngIf="registrationForm.get('firstName')?.errors?.['required']">Es necesario un Nombre.</div>
      </div>
    </div>

    <div>
      <label for="lastName">Apellidos:</label>
      <input type="text" id="lastName" formControlName="lastName">
      <div *ngIf="registrationForm.get('lastName')?.invalid && registrationForm.get('lastName')?.touched">
        <div *ngIf="registrationForm.get('lastName')?.errors?.['required']">Es necesario un Apellido.</div>
      </div>
    </div>

    <div>
      <label for="email">Email:</label>
      <input type="email" id="email" formControlName="email">
      <div *ngIf="registrationForm.get('email')?.invalid && registrationForm.get('email')?.touched">
        <div *ngIf="registrationForm.get('email')?.errors?.['email']">Formato inválido.</div>   
        <div *ngIf="registrationForm.get('email')?.errors?.['required']">Es necesario un Email.</div>
      </div>
    </div>

    <div>
      <label for="password">Contraseña:</label>
      <input type="password" id="password" formControlName="password">
      <div *ngIf="registrationForm.get('password')?.invalid && registrationForm.get('password')?.touched">
        <div *ngIf="registrationForm.get('password')?.errors?.['required']">Es necesaria una Contraseña.</div>
      </div>
    </div>

    <button type="submit" [disabled]="registrationForm.invalid">Enviar</button>

    <hr>

    <div>
      <button class="google-btn" (click)="registerWithGoogle()">Registrar con Google</button>
      <button class="facebook-btn" (click)="registerWithFacebook()">Registrar con Facebook</button>
    </div>
  </form>
</div>


/* src\app\components\auth\registration-form\registration-form.component.scss */

@import '/../node_modules/bootstrap';
@import '~bootstrap/dist/css/bootstrap.min.css';


.form-container {
  display: flex;
  flex-direction: column;
  align-items: center;

  h1 {
    font-size: 24px;
    margin-bottom: 20px;
  }
}

form {
display: flex;
flex-direction: column;
align-items: center;
}
div {
display: flex;
flex-direction: column;
align-items: center;
margin-bottom: 20px;
}
label {
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 10px;
}

input[type="text"],
input[type="email"],
input[type="password"] {
  width: 100%;
  padding: 10px;
  font-size: 16px;
  border-radius: 5px;
  border: 1px solid #ccc;

  &:focus {
    outline: none;
    border-color: #4CAF50;
  }
}

div.error {
  color: red;
  margin-top: 5px;
  font-size: 14px;
}

button[type="submit"] {
background-color: #4CAF50;
color: white;
padding: 10px 20px;
font-size: 16px;
border-radius: 5px;
border: none;
cursor: pointer;
&:disabled {
  opacity: 0.5;
  cursor: default;
  }
}

.google-btn, .facebook-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 40px;
  color: white;
  font-size: 16px;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
}

.google-btn {
background-color: #DB4437;
margin-bottom: 10px;
&:hover {
  background-color: #D82018;
}
}

.facebook-btn {
background-color: #3B5998;
&:hover {
  background-color: #2F477A;
}

}

/* src\app\components\cart\cart.component.html */

<div class="cart">
  <h2>Carrito de compras</h2>
  <div *ngIf="products.length > 0; else emptyCart">
    <div class="products">
      <div *ngFor="let product of products">
        <img [src]="product.imageUrl[0]" alt="{{ product.name }}">
        <h3>{{ product.name }}</h3>
        <p>{{ product.description }}</p>
        <p>Tamaño: {{ product.size }}</p>
        <p>Sabor: {{ getSelectedFlavor(product) }}</p>
        <p>Precio: ${{ formatPrice(product.price) }}</p>
        <button (click)="removeProduct(product)">Eliminar</button>
      </div>
    </div>
    <div class="total">
      <p>Total: ${{ getTotal() | number }}</p>
      <button (click)="completePurchase()">Finalizar Pago</button>
    </div>
  </div>

  <ng-template #emptyCart>
    <p>Tu carrito de compras está vacío.</p>
  </ng-template>
</div>


/* src\app\components\cart\cart.component.scss */


.cart {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 20px;

  h2 {
    margin-bottom: 20px;
  }

  .products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    grid-gap: 20px;

    div {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;

      img {
        width: 100%;
        max-width: 200px;
        margin-bottom: 10px;
      }

      button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        margin-top: 10px;
      }
    }
  }

  .total {
    margin-top: 20px;
    text-align: right;

    p {
      font-size: 20px;
      font-weight: bold;
    }
  }
}

  .total {
      button {
        background-color: #4CAF50;
        color: white;
        padding: 20px 30px;
        font-size: 17px;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        margin-top: 10px;
      }
    }
  

/* src\app\components\checkout\checkout.component.html */

<div class="checkout-container">
  <div class="checkout-form">
    <h2>Checkout</h2>
    <form [formGroup]="checkoutForm" (ngSubmit)="onSubmit()">
      <div class="form-group">
        <label for="numero_documento">Número de documento:</label>
        <input type="number" id="numero_documento" formControlName="numero_documento" required>
      </div>
      <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" formControlName="email" required>
      </div>
      <div class="form-group">
        <label for="nombres">Nombres:</label>
        <input type="text" id="nombres" formControlName="nombres" required>
      </div>
      <div class="form-group">
        <label for="apellidos">Apellidos:</label>
        <input type="text" id="apellidos" formControlName="apellidos" required>
      </div>
      <div class="form-group">
        <label for="departamento">Departamento:</label>
        <select id="departamento" formControlName="departamento" required (change)="onDepartmentChange(checkoutForm.value.departamento)">
          <option value="" disabled selected>Seleccione un departamento</option>
          <option *ngFor="let department of departments" [value]="department">{{ department }}</option>
        </select>
      </div>

      <div class="form-group">
        <label for="ciudad">Ciudad:</label>
        <select id="ciudad" formControlName="ciudad" required>
          <option value="" disabled selected>Seleccione una ciudad</option>
          <ng-container *ngFor="let ciudad of cities">
            <option [value]="ciudad">{{ ciudad }}</option>
          </ng-container>
        </select>
      </div>
      <div class="form-group">
        <label for="direccion_envio">Dirección de envío:</label>
        <input type="text" id="direccion_envio" formControlName="direccion_envio" required>
      </div>
      <div class="form-group">
        <label for="complemento">Complemento:</label>
        <input type="text" id="complemento" formControlName="complemento">
      </div>
      <div class="form-group">
        <label for="celular">Celular:</label>
        <input type="number" id="celular" formControlName="celular" required>
      </div>
      <div class="form-group">
        <label for="notas">Notas:</label>
        <textarea id="notas" formControlName="notas"></textarea>
      </div>
      <button type="submit">Realizar pedido</button>
    </form>
  </div>

  <div class="payment-summary">
    <h2>Resumen de pedido</h2>
    <div *ngFor="let product of products" class="product-item">
      <img [src]="product.imageUrl[0]" alt="{{ product.name }}">
      <div class="product-details">
        <h3>{{ product.name }}</h3>
        <p>{{ product.description }}</p>
        <p>Tamaño: {{ product.size }}</p>
        <p>Sabor: {{ getSelectedFlavor(product) }}</p>
        <p>Precio: ${{ formatPrice(product.price) }}</p>
      </div>
      <button (click)="removeProduct(product)">Eliminar</button>
    </div>
    <div class="total">
      <p>Total: ${{ getTotal() | number }}</p>
    </div>
    <div class="payment-options">
      <h3>Seleccione el método de pago</h3>
      <div>
        <!-- Agrega aquí tus botones de método de pago, si es necesario -->
        <!-- <p><button (click)="makeMercadoPagoPayment()">Pagar con MercadoPago</button></p> -->
        <!-- <p><button (click)="makePSEPayment()">Pagar con PSE</button></p> -->
      </div>
    </div>
  </div>
</div>


/* src\app\components\checkout\checkout.component.scss */

@import '~bootstrap/dist/css/bootstrap.min.css';

/* checkout.component.scss */
.checkout-container {
  display: flex;
  justify-content: space-between; /* Agregamos esta propiedad para alinear a la izquierda y derecha */
  align-items: flex-start; /* Alineamos los elementos arriba */
  margin: 15px;
  width: 90%; /* Establecemos un ancho máximo */

  h2 {
    margin-bottom: 20px;
  }

  .checkout-form {
    flex: 1; /* Hace que esta sección tome el espacio restante */
    display: flex;
    flex-direction: column;
    align-items: center;

    .form-group {
      margin-bottom: 15px;
      label {
        font-weight: bold;
      }
      input,
      select,
      textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }
    }

    button[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px 20px;
      font-size: 16px;
      border-radius: 5px;
      border: none;
      cursor: pointer;
      margin-top: 10px;
      &:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }
    }
  }

  .payment-summary {
    h2 {
      flex: 1; /* Hace que esta sección tome el espacio restante */
      margin-left: 15px; /* Añadimos un espacio entre las secciones */
      margin-top: 15px;
    }

    .product-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;

      img {
        width: 100%;
        max-width: 200px;
        margin-bottom: 10px;
      }

      button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        margin-top: 10px;
      }
    }

    .total {
      margin-top: 20px;
      text-align: right;

      p {
        font-size: 20px;
        font-weight: bold;
      }
    }

    .payment-options {
      h3 {
        margin-top: 20px;
      }
      div {
        button {
          background-color: #4CAF50;
          color: white;
          padding: 20px 30px;
          font-size: 17px;
          border-radius: 6px;
          border: none;
          cursor: pointer;
          margin-top: 10px;
        }
      }
    }
  }
}


/* src\app\components\contact\contact.component.html */

<div class="container">
  <h1>Contáctanos</h1>
  <div class="row">
    <div class="col-md-6">
      <h3>Ubicación</h3>
      <p>Estamos ubicados en Bogotá y Hacemos envios a todo el pais¡.</p>
      <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3976.062868153577!2d-74.0646823842646!3d4.697542342809965!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8e3f8a84ce4b3719%3A0xeb13a526a824c6b4!2sBogot%C3%A1%2C%20Colombia!5e0!3m2!1sen!2sus!4v1620354656928!5m2!1sen!2sus" width="100%" height="350" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
    </div>
    <div class="col-md-6">
      <h3>Contáctanos</h3>
      <form>
        <div class="form-group">
          <label for="name">Nombre</label>
          <input type="text" class="form-control" id="name" placeholder="Ingresa tu nombre">
        </div>
        <div class="form-group">
          <label for="email">Correo electrónico</label>
          <input type="email" class="form-control" id="email" placeholder="Ingresa tu correo electrónico">
        </div>
        <div class="form-group">
          <label for="message">Mensaje</label>
          <textarea class="form-control" id="message" rows="5" placeholder="Ingresa tu mensaje"></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Enviar mensaje</button>
      </form>
      <div class="mt-4">
        <p>También puedes contactarnos por:</p>
        <ul>
          <li><a href="tel:+573124193753"><i class="fa fa-phone mr-2"></i>+57 3124193753</a></li>
          <li><a href="https://wa.me/573124193753"><i class="fa fa-whatsapp mr-2"></i>+57 3124193753</a></li>
          <li><a href="mailto:contacto@tutiendafit.com"><i class="fa fa-envelope mr-2"></i>contacto@tutiendafit.com</a></li>
        </ul>
      </div>
    </div>
  </div>
</div>


/* src\app\components\contact\contact.component.scss */

@import '~bootstrap/dist/css/bootstrap.min.css';

$primary-color: #511a87;
$secondary-color: #ffffff;

.container {
  padding: 50px;
  background-color: $secondary-color;

  h1 {
    color: $primary-color;
    font-size: 36px;
    margin-bottom: 40px;
    text-align: center;
    text-transform: uppercase;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;

    .col-md-6 {
      margin-bottom: 40px;

      h3 {
        color: $primary-color;
        font-size: 26px;
        margin-bottom: 20px;
        text-align: center;
        text-transform: uppercase;
      }

      p {
        font-size: 18px;
        margin-bottom: 20px;
        text-align: center;
      }

      iframe {
        border: 0;
        height: 350px;
        width: 100%;
      }

      form {
        input,
        textarea {
          border: 2px solid $primary-color;
          border-radius: 4px;
          font-size: 16px;
          padding: 12px;
          width: 100%;

          &:focus {
            border-color: darken($primary-color, 10%);
            outline: none;
          }
        }

        label {
          display: block;
          font-size: 16px;
          margin-bottom: 8px;
          text-transform: uppercase;
        }

        button {
          background-color: $primary-color;
          border: none;
          border-radius: 4px;
          color: $secondary-color;
          cursor: pointer;
          font-size: 18px;
          padding: 12px 24px;
          transition: background-color 0.2s ease-in-out;

          &:hover {
            background-color: darken($primary-color, 10%);
          }
        }
      }

      ul {
        list-style: none;
        margin: 0;
        padding: 0;

        li {
          margin-bottom: 10px;

          a {
            color: $primary-color;
            font-size: 16px;
            text-decoration: none;

            i {
              margin-right: 10px;
            }

            &:hover {
              text-decoration: underline;
            }
          }
        }
      }
    }
  }
}


/* src\app\components\home\home.component.html */

<main>
  <section class="py-5 bg-light">
    <div class="container">
      <h1 class="text-center mb-5">Bienvenido a PowerFitness</h1>

      <!-- Agregar el slider aquí -->
      <div class="carousel-container">
        <ngx-slick-carousel class="carousel" [config]="carouselConfig">
          <div *ngFor="let brand of brands" class="carousel-item">
            <img [src]="brand.image[0]" alt="{{ brand.brand }}" class="brand-logo">
          </div>
        </ngx-slick-carousel>
      </div>

      <h1 class="text-center mb-5">Productos en Oferta</h1>
      <div class="row">
        <div *ngFor="let product of products" class="col-md-4 col-sm-6 mb-4">
          <div class="card shadow-sm">
            <img class="card-img-top" [src]="product.imageUrl" alt="{{ product.name }}">
            <div class="card-body">
              <h4 class="card-title">{{ product.name }}</h4>
              <p class="card-text">{{ product.description }}</p>
              <div class="d-flex justify-content-between align-items-center">
                <div class="btn-group">
                  <button type="button" class="btn btn-sm btn-outline-secondary" *ngIf="product.id" (click)="viewProductDetails(product.id)">Ver más</button>
                </div>
                <small class="text-muted">${{ formatPriceWithThousandsSeparator(product.price) }}</small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>


/* src\app\components\home\home.component.scss */



/* Estilos generales */
main {
  min-height: 100vh;
}

.py-5 {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

/* Estilos para el carrusel de marcas */
.carousel-container {
  width: 100%;
  margin-bottom: 30px;
}

.carousel {
  display: flex;
  align-items: center;
  height: auto; /* Cambia esto a auto para permitir la altura automática según el contenido */
  overflow: hidden; /* Ocultamos cualquier contenido adicional fuera del carrusel */
  justify-content: space-between; /* Alineación de elementos */
}

/* Ajustamos el ancho de las columnas del carrusel para mostrar 4 marcas por fila */
.carousel-item {
  flex: 0 0 20%; /* Ancho fijo para mostrar 5 marcas por fila */
  max-width: 20%; /* Ancho fijo para mostrar 5 marcas por fila */
  display: flex;
  justify-content: center;
  padding: 2px; /* Ajustamos el espacio entre las marcas */
}

.brand-logo {
  max-height: 150px;
  max-width: 100%; /* Cambia el ancho máximo según tus necesidades */
}



/* Estilos para las tarjetas de productos */
.row {
  display: flex;
  flex-wrap: wrap;
  margin: -5px; /* Aumentamos el espacio entre las filas */
}

.col-md-4,
.col-sm-6 {
  padding: 5px; /* Aumentamos el espacio entre las tarjetas */
}

.card {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border: none;
  width: 100%; /* Las tarjetas ocuparán todo el ancho de su contenedor */
  max-width: calc(100% - 10px); /* Para asegurarnos de que haya 3 tarjetas por fila */
  margin-right: 10px; /* Añadimos margen derecho para separar las tarjetas */
  margin-bottom: 10px; /* Añadimos margen inferior para separar las filas */
}

.card:last-child {
  margin-right: 0; /* Eliminamos el margen derecho de la última tarjeta en la fila */
}

.card-img-top {
  height: 400px;
  object-fit: cover; /* Cambiamos a "cover" para ajustar la imagen al tamaño de la tarjeta */
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.card-body {
  padding: 3.5rem;
}

h1.text-center {
  font-size: 2rem;
  margin-bottom: 0.5rem;
}


h4.card-title {
  font-size: 1.3rem;
  margin-bottom: 0.5rem;
}

p.card-text {
  font-size: 1rem;
  margin-bottom: 1rem;
}

.btn-group {
  margin-top: 15px;
}

.btn {
  margin-right: 8px;
}

small.text-muted {
  font-size: 1rem;
  font-weight: bolder;
  color: #999;
}


/* src\app\components\layout\footer\footer.component.html */

<footer class="bg-dark text-white py-5">
    <div class="container">
      <div class="row">
        <div class="col-md-4">
          <h5>PowerFitness</h5>
          <p>Tienda de artículos deportivos en Bogotá, Colombia. Envíos a todo el país.</p>
          <p>Teléfono: +573124193753</p>
        </div>
        <div class="col-md-4">
          <h5>Enlaces</h5>
          <ul class="list-unstyled">
            <li><a href="#">Inicio</a></li>
            <li><a href="#">Categorías</a></li>
            <li><a href="#">Productos</a></li>
            <li><a href="#">Nosotros</a></li>
            <li><a href="#">Descuentos</a></li>
            <li><a href="#">Contacto</a></li>
          </ul>
        </div>
        <div class="col-md-4">
          <h5>Síguenos</h5>
          <ul class="list-unstyled">
            <li><a href="#">Facebook</a></li>
            <li><a href="#">Twitter</a></li>
            <li><a href="#">Instagram</a></li>
          </ul>
        </div>
      </div>
      <hr>
      <p class="text-muted small mb-0">© 2023 PowerFitness</p>
    </div>
  </footer>
  

/* src\app\components\layout\footer\footer.component.scss */



/* src\app\components\layout\header\header.component.html */



/* src\app\components\layout\header\header.component.scss */



/* src\app\components\logout\logout.component.html */

<p>logout works!</p>


/* src\app\components\logout\logout.component.scss */



/* src\app\components\navbar\navbar.component.html */

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
      <a class="navbar-brand" routerLink="/">PowerFitness</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link" routerLink="/home" routerLinkActive="active">Inicio</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Categorías
            </a>
            <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
              <li *ngFor="let category of productCategories">
                <a class="dropdown-item" href="#" (click)="filterByCategory(category)">{{ category }}</a>
              </li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/product-list" routerLinkActive="active">Productos</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/nosotros" routerLinkActive="active">Nosotros</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/sale" routerLinkActive="active">Ofertas!</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/contact" routerLinkActive="active">Contacto</a>
          </li>
        </ul>
        <form class="d-flex" (ngSubmit)="searchForm.ngSubmit.emit()">
          <input class="form-control me-2" type="search" placeholder="Buscar" aria-label="Buscar" [(ngModel)]="searchQuery" name="searchQuery">
          <button class="btn btn-outline-success" type="submit">Buscar</button>
        </form>
        <ul class="navbar-nav mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link" routerLink="/login-form" routerLinkActive="active">Iniciar Sesión</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/register" routerLinkActive="active">Registro</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" routerLink="/cart" routerLinkActive="active">
              <span class="bi bi-cart"></span>
              <span class="cart-items">{{ cartItemCount }}</span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>


/* src\app\components\navbar\navbar.component.scss */

@import '../../../../node_modules/bootstrap/scss/bootstrap';
@import '~bootstrap-icons/font/bootstrap-icons.css';
//@import '../../../../node_modules/bootstrap/';

// Variables de color
$primary-color: #511a87;
$secondary-color: #fff;
$color-change-percentage: 10%;

// Estilos para la barra de navegación
.navbar {
  background: linear-gradient(to bottom, $primary-color, $primary-color $color-change-percentage, $primary-color);

  .navbar-brand {
    font-size: 30px;
    font-weight: bold;
    color: $secondary-color;

    &:hover {
      color: $secondary-color;
    }
  }

  .nav-link {
    color: $secondary-color;

    &:hover, &:active, &.active {
      color: $secondary-color;
    }
  }

  .dropdown-menu {
    background-color: $primary-color;

    .dropdown-item {
      color: $secondary-color;

      &:hover {
        color: $secondary-color;
        background-color: lighten($primary-color, $color-change-percentage);
      }
    }
  }

  .form-control {
    background-color: lighten($primary-color, $color-change-percentage);
    color: $secondary-color;

    &::placeholder {
      color: $secondary-color;
    }
  }

  .btn-outline-success {
    color: $secondary-color;
    border-color: $secondary-color;

    &:hover {
      color: $primary-color;
      background-color: $secondary-color;
    }
  }

  .bi-cart {
    font-size: 1.5rem;
    color: $secondary-color;

    &:hover {
      color: $secondary-color;
    }
  }

  .bi.bi-cart {
    font-size: 1.5rem;
    color: $secondary-color;

    &:hover {
      color: $secondary-color;
    }
    .cart-items {
      background-color: #ff0000;  // Color de fondo para el número de elementos
      color: #ffffff;  // Color del texto para el número de elementos
      font-size: 12px;  // Tamaño de fuente para el número de elementos
      border-radius: 50%;  // Forma redondeada para crear un círculo
      padding: 2px 6px;  // Espaciado interno para el número de elementos
      position: absolute;  // Posición absoluta para colocar el número sobre el ícono
      top: -5px;  // Ajuste vertical para posicionar el número correctamente
      right: -5px;  // Ajuste horizontal para posicionar el número correctamente
    }
  }
}

/* src\app\components\nosotros\nosotros.component.html */

<section class="nosotros">
  <div class="container">
    <h2 class="nosotros-title">Bienvenidos a PowerFitness</h2>
    <p class="nosotros-description">
      En nuestro compromiso por ayudarte a alcanzar tus objetivos de manera eficiente y segura, te ofrecemos una amplia variedad de productos y servicios especializados en el ámbito deportivo.
    </p>
    <p class="nosotros-description">
    Nos especializamos en la venta de  suplementos deportivos de alta calidad, entre los que destacan nuestra selección de proteínas, pre-entrenamientos, quemadores de grasa, vitaminas y minerales, así como accesorios de entrenamiento y ropa deportiva.
    Contamos con las mejores marcas del mercado para garantizarte los resultados que esperas, sin comprometer tu salud ni seguridad. Todos nuestros productos son seleccionados cuidadosamente y sometidos a rigurosos controles de calidad para garantizar que cumplen con los estándares más exigentes.
    </p>
    <p class="nosotros-description">
      Además, en PowerFitness no solo te ofrecemos productos de calidad, sino también asesoramiento personalizado para que puedas elegir los suplementos deportivos que mejor se adapten a tus necesidades y objetivos. Nos enfocamos en entender tus necesidades específicas para ofrecerte recomendaciones personalizadas y así puedas alcanzar tus metas de forma más efectiva.
    </p>
    <p class="nosotros-description">
      En definitiva, en PowerFitness estamos comprometidos en ser tu aliado en el camino hacia una vida más saludable y activa, ofreciéndote siempre los mejores productos y servicios para que puedas alcanzar tus metas de forma eficiente y segura. No dudes en visitar nuestra tienda virtual y comprobar por ti mismo la calidad de nuestra oferta.
    </p>
    <a class="nosotros-button" href="product-list">Explora nuestros productos</a>
  </div>
</section>


/* src\app\components\nosotros\nosotros.component.scss */

/* Estilos para la sección "Nosotros" */

.nosotros-section {
  background-color: #f8f8f8;
  padding: 60px 0;
  text-align: center;
}

.nosotros-title {
  font-size: 36px;
  font-weight: 600;
  margin-bottom: 30px;
}

.nosotros-description {
  font-size: 20px;
  line-height: 1.5;
  margin-bottom: 60px;
}

.nosotros-cards {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.nosotros-card {
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  padding: 20px;
  text-align: center;
  margin-bottom: 30px;
  width: 30%;
}

.nosotros-card-icon {
  font-size: 50px;
  margin-bottom: 20px;
}

.nosotros-card-title {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 20px;
}

.nosotros-card-description {
  font-size: 16px;
  line-height: 1.5;
  margin-bottom: 20px;
}

.nosotros-card-link {
  background-color: #008CBA;
  border: none;
  border-radius: 5px;
  color: #fff;
  font-size: 16px;
  font-weight: 600;
  padding: 10px 20px;
  text-align: center;
  text-decoration: none;
  transition: background-color 0.3s ease;
}

.nosotros-card-link:hover {
  background-color: #006E8A;
}

@media screen and (max-width: 768px) {
  .nosotros-cards {
    justify-content: center;
  }

  .nosotros-card {
    width: 45%;
  }
}


/* src\app\components\product-import\product-import.component.html */

<div>
    <h1>Product Import</h1>
    <input type="file" #fileInput (change)="handleFileInput(fileInput)">
    <button (click)="importCSV()"> Import CSV </button>
  </div>

/* src\app\components\product-import\product-import.component.scss */



/* src\app\components\product-management\product-management.component.html */

<div>
  <h1>Product Management</h1>
  <input type="file" #fileInput (change)="handleFileInput(fileInput)">
  <button (click)="exportToCSV()">Exportar CSV</button>
</div>


/* src\app\components\product-management\product-management.component.scss */

/* Add any custom styles for the product management component here */


/* src\app\components\products\product\product.component.html */

<p>product works!</p>


/* src\app\components\products\product\product.component.scss */



/* src\app\components\products\product-detail\product-detail.component.html */

<!-- product-detail.component.html -->
<div class="container" *ngIf="product">
    <div class="row">
      <div class="col-12">
        <div class="card product">
          <div class="image-wrapper">
            <div class="image-container">
              <button class="arrow left-arrow" (click)="setCurrentImageIndex(currentImageIndex - 1)">&lt;</button>
              <div class="images">
                <img class="card-img-top product-image" [src]="product.imageUrl || ''" alt="{{ product.name }}" />
              </div>
              <button class="arrow right-arrow" (click)="setCurrentImageIndex(currentImageIndex + 1)">&gt;</button>
            </div>
          </div>
          <div class="card-body">
            <h5 class="card-title product-name">{{ product.name }}</h5>
            <p class="card-text product-category" *ngIf="product?.category?.length">
              Categoría: {{ product.category }}
            </p>
            <p class="card-text product-brand" *ngIf="product?.brand?.length">Marca: {{ product.brand }}</p>
            <p class="card-text product-size" *ngIf="product?.sizes?.length">
              Tamaño:
              <select [(ngModel)]="product.selectedSize" (change)="filterProductsBySize()">
                <option *ngFor="let size of product.sizes" [value]="size">{{ size }}</option>
              </select>
            </p>
            <p class="card-text product-size" *ngIf="product?.size?.length">Tamaño: {{ product.size }}</p>
            <p class="card-text product-flavor" *ngIf="product?.flavors?.length">
              Sabor:
              <select [(ngModel)]="product.selectedFlavor" (change)="filterProductsByFlavor()">
                <option *ngFor="let flavor of product.flavors" [value]="flavor">{{ flavor }}</option>
              </select>
            </p>
            <p class="card-text product-flavor" *ngIf="product?.flavors?.length === 1">Sabor: {{ product.flavors[0] }}</p>
            <p class="card-text product-stock" *ngIf="product?.stock !== undefined && product.stock !== 0">
              Stock: {{ product.stock }}
            </p>
            <p class="card-text product-description" *ngIf="product?.description">{{ product.description }}</p>
            <p class="card-text product-discount" *ngIf="product?.discount !== undefined && product.discount !== 0">
              Descuento: {{ product.discount }}
            </p>
            <p class="card-text product-price" *ngIf="product?.price !== undefined && product.price !== 0">
              {{ formatPrice(product.price || 0) }}
            </p>
            <button class="btn btn-primary add-to-cart-button" (click)="addProduct(product)">Añadir al Carrito</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  

/* src\app\components\products\product-detail\product-detail.component.scss */

@import '../../../../../node_modules/bootstrap/scss/bootstrap';
@import '~bootstrap/dist/css/bootstrap.min.css';

.container {
  padding: 20px 0;

  .card.product {
    .image-wrapper {
      .image-container {
        display: flex;
        align-items: left;

        .arrow {
          font-size: 24px;
          background-color: transparent;
          border: none;
          color: #333;
          cursor: pointer;
        }

        .left-arrow {
          margin-right: 10px;
        }

        .right-arrow {
          margin-left: 10px;
        }

        .images {
          flex-grow: 1;
          display: flex;
          justify-content: left;
          align-items: left;

          .card-img-top.product-image {
            max-width: 100%;
            max-height: 500px;
            object-fit: contain;
          }
        }
      }
    }

    .card-body {
      .card-title.product-name {
        font-size: 24px;
        margin-bottom: 20px;
      }

      .card-text.product-category,
      .card-text.product-brand {
        margin-bottom: 5px;
      }

      .card-text.product-size {
        margin-bottom: 5px;

        select {
          margin-left: 5px;
        }
      }

      .card-text.product-flavor {
        margin-bottom: 5px;

        select {
          margin-left: 5px;
        }
      }

      .card-text.product-stock,
      .card-text.product-discount,
      .card-text.product-price {
        margin-bottom: 5px;
      }

      .card-text.product-description {
        margin-bottom: 20px;
      }

      .btn.btn-primary.add-to-cart-button {
        margin-top: 10px;
      }
    }
  }
}


/* src\app\components\products\product-list\product-list.component.html */

<!-- product-list.component.html -->
<div class="container">
  <div class="row">
    <div class="col-12 col-lg-3">
      <div class="category-menu">
        <h5>Categorías:</h5>
        <ul>
          <li *ngFor="let category of productCategories" (click)="filterProductsByCategory(category)">
            {{ category }}
          </li>
        </ul>
      </div>
    </div>

    <div class="col-12 col-lg-9">
      <div class="row">
        <div *ngIf="confirmationMessage" class="confirmation-message col-12">
          {{ confirmationMessage }}
        </div>
        <div class="col-12 col-md-6 col-lg-4" *ngFor="let product of filteredProducts">
          <div class="card product">
            <div class="image-wrapper">
              <div class="image-container">
                <button class="arrow left-arrow" (click)="scrollImages(product, -1)">&lt;</button>
                <div class="images">
                  <img class="card-img-top product-image" [src]="product.imageUrl[currentImageIndex]" alt="{{ product.name }}" />
                </div>
                <button class="arrow right-arrow" (click)="scrollImages(product, 1)">&gt;</button>
              </div>
            </div>
            <div class="card-body">
              <h5 class="card-title product-name">
                <a *ngIf="product.id" (click)="viewProductDetails(product.id)" [title]="product.name">{{ product.name }}</a>
                <span *ngIf="!product.id" [title]="product.name">{{ product.name }}</span>
              </h5>
              <p class="card-text product-category" *ngIf="product.category && product.category.length > 0">
                Categoría: {{ product.category }}
              </p>
              <p class="card-text product-brand" *ngIf="product.brand && product.brand.length > 0">Marca: {{ product.brand }}</p>
              <p class="card-text product-size" *ngIf="product.sizes && product.sizes.length > 0">
                Tamaño:
                <select [(ngModel)]="product.selectedSize" (change)="filterProductsBySize()">
                  <option *ngFor="let size of product.sizes" [value]="size">{{ size }}</option>
                </select>
              </p>
              <p class="card-text product-size" *ngIf="product.size && product.size.length > 0">
                Tamaño: {{ product.size }}
              </p>
              <p class="card-text product-flavor" *ngIf="product.flavors && product.flavors.length > 0">
                Sabor:
                <select [(ngModel)]="product.selectedFlavor" (change)="filterProductsByFlavor()">
                  <option *ngFor="let flavor of product.flavors" [value]="flavor">{{ flavor }}</option>
                </select>
              </p>
              <p class="card-text product-flavor" *ngIf="product.flavors && product.flavors.length === 1">
                Sabor: {{ product.flavors[0] }}
              </p>
              <p class="card-text product-stock" *ngIf="product.stock !== undefined && product.stock !== 0">
                Stock: {{ product.stock }}
              </p>
              <p class="card-text product-description" *ngIf="product.description">{{ product.description }}</p>
              <p class="card-text product-discount" *ngIf="product.discount !== undefined && product.discount !== 0">
                Descuento: {{ product.discount }}
              </p>
              <p class="card-text product-price" *ngIf="product.price !== undefined && product.price !== 0">
               ${{ formatPrice(product.price) }}
              </p>
              <button class="btn btn-primary add-to-cart-button" (click)="addProduct(product)">Añadir al Carrito</button>
              <button class="btn btn-primary view-more-button" *ngIf="product.id" (click)="viewProductDetails(product.id)">Ver más</button>
              <p class="error-message" *ngIf="product.flavors && product.flavors.length > 0 && !product.selectedFlavor">Selecciona un sabor</p>
              <p class="error-message" *ngIf="product.sizes && product.sizes.length > 0 && !product.selectedSize">Selecciona un tamaño</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


/* src\app\components\products\product-list\product-list.component.scss */

/* Estilos generales */
.container {
  display: flex;
  margin-top: 20px;

  // Menú de categorías
  .category-menu {
    position: sticky;
    left: 0;
    width: 200px;
    background-color: #f2f2f2;
    padding: 10px;
    border-right: 1px solid #ccc;
    margin-left: -50px;

    h5 {
      font-size: 25px;
      font-weight: bold;
      margin-bottom: 10px;
      color: #333;
    }

    ul {
      list-style: none;
      padding-left: 0;

      li {
        cursor: pointer;
        margin-bottom: 5px;
        border-radius: 5px;
        font-size: 18px;
        transition: all 0.2s ease;
        color: #000;
        background-color: #fff;

        &:hover {
          color: #ff6b6b;
        }
      }
    }
  }
}

// Tarjetas de productos
.product {
  margin-bottom: 5px;
  position: sticky;
  margin-left: -15px; // Elimina el margen izquierdo para alinear a la izquierda

  .image-wrapper {
    position: relative;

    .image-container {
      position: relative;
      overflow: hidden;

      .images {
        display: flex;
        transition: transform 0.5s ease;
      }

      .left-arrow,
      .right-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: transparent;
        border: none;
        color: black;
        font-size: 20px;
        padding: 8px;
        cursor: pointer;

        &.left-arrow {
          left: 0;
        }

        &.right-arrow {
          right: 0;
        }
      }
    }
  }

  .card-body {
    .card-title {
      font-size: 20px;
      font-weight: bold;
      margin-bottom: 10px;
    }

    .card-text {
      font-size: 14px;
      margin-bottom: 5px;
      text-align: justify;
    }

    .product-name {
      margin-bottom: 0;
      cursor: pointer;
      text-decoration: underline;

      &:hover {
        color: #ff6b6b;
      }
    }

    .product-category,
    .product-brand,
    .product-size,
    .product-flavor,
    .product-stock,
    .product-description,
    .product-discount {
      margin-bottom: 5px;

    }

    .product-price {
      font-size: 15px;
      margin-bottom: 5px;
      font-weight: bolder;
    }

    .add-to-cart-button {
      margin-top: 10px;
      margin-right: 5px;
    }

    .view-more-button {
      margin-top: 10px;
    }
  }
}

// Mensaje de confirmación
.confirmation-message {
  background-color: #dff0d8;
  color: #3c763d;
  border: 1px solid #d6e9c6;
  border-radius: 3px;
  padding: 10px;
  margin-bottom: 20px;
}

@media (max-width: 767px) {
  // Estilos para pantallas pequeñas
  .category-menu {
    height: 80px;
    padding: 10px;

    h5 {
      font-size: 16px;
      margin-bottom: 8px;
    }

    ul {
      li {
        font-size: 12px;
      }
    }
  }
}

@media (min-width: 768px) {
  // Estilos para pantallas medianas
  .col-lg-4 { // Ajustar el ancho de las tarjetas
    flex-basis: 33.33%;
    max-width: 33.33%;
  }
}

@media (min-width: 992px) {
  // Estilos para pantallas grandes
  .col-lg-4 { // Ajustar el ancho de las tarjetas
    flex-basis: 33.33%;
    max-width: 33.33%;
  }
}


/* src\app\components\search\search.component.html */

<form class="d-flex" (ngSubmit)="searchProducts()">
    <input class="form-control me-2" type="search" placeholder="Buscar" aria-label="Buscar" [(ngModel)]="searchQuery" name="searchQuery">
    <button class="btn btn-outline-success" type="submit">Buscar</button>
  </form>
  

/* src\app\components\search\search.component.scss */



/* src\app\components\services\firebase-test\firebase-test.component.html */

<p>firebase-test works!</p>


/* src\app\components\services\firebase-test\firebase-test.component.scss */



/* src\app\components\user-panel\user-panel.component.html */

<div class="container">
  <div class="menu">
    <ul class="menu-items">
      <li class="menu-item" (click)="selectModule('profile')">Profile</li>
      <li class="menu-item" (click)="selectModule('password')">Change Password</li>
      <li class="menu-item" (click)="selectModule('orders')">Pedidos</li>
      <li class="menu-item" (click)="selectModule('addresses')">Direcciones</li>
      <li class="menu-item" (click)="selectModule('account')">Detalles de la Cuenta</li>
      <li class="menu-item" (click)="selectModule('wishlist')">Lista de Deseos</li>
      <li class="menu-item" (click)="selectModule('logout')">Salir</li>
    </ul>
  </div>

  <div class="content">
    <h2 *ngIf="selectedModule === 'profile'">User Profile</h2>
    <form *ngIf="selectedModule === 'profile'" [formGroup]="profileForm">
      <div class="form-group">
        <label for="name">Name</label>
        <input type="text" formControlName="name" class="form-control" required>
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" formControlName="email" class="form-control" required>
      </div>
      <!-- Add more profile fields as needed -->
      <button type="button" class="btn btn-primary" (click)="updateProfile()">Update Profile</button>
    </form>
    <div *ngIf="selectedModule === 'profile'">
      <h4>Name: {{ profileForm.get('name')?.value }}</h4>
      <h4>Email: {{ profileForm.get('email')?.value }}</h4>
    </div>

    <h2 *ngIf="selectedModule === 'password'">Change Password</h2>
    <form *ngIf="selectedModule === 'password'" [formGroup]="passwordForm">
      <div class="form-group">
        <label for="currentPassword">Current Password</label>
        <input type="password" formControlName="currentPassword" class="form-control" required>
      </div>
      <div class="form-group">
        <label for="newPassword">New Password</label>
        <input type="password" formControlName="newPassword" class="form-control" required>
      </div>
      <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <input type="password" formControlName="confirmPassword" class="form-control" required>
        <div *ngIf="passwordForm.hasError('passwordMismatch')" class="password-mismatch-error">
          Passwords do not match
        </div>
      </div>
      <button type="button" class="btn btn-primary" (click)="changePassword()">Change Password</button>
    </form>
    

    <h2 *ngIf="selectedModule === 'orders'">Pedidos</h2>
    <div *ngIf="selectedModule === 'orders'" class="module-content">
      <ul *ngIf="userOrders && userOrders.length > 0">
        <li *ngFor="let order of userOrders">
          <!-- Mostrar información de cada pedido aquí -->
          <p>Fecha del pedido: {{ order.fecha }}</p>
          <p>Número de pedido: {{ order.numero_pedido }}</p>
          <button type="button" class="btn btn-primary" (click)="viewOrderDetails(order)">Ver Detalle</button>
          
          <!-- Agregar un área para mostrar los detalles del pedido si showDetails es true -->
          <div *ngIf="order.showDetails">
            <!-- Mostrar los detalles del pedido aquí -->
            <p>Detalles del Pedido:</p>
            <div *ngIf="orderDetails">
              <!-- Mostrar los detalles del pedido aquí utilizando orderDetails -->
              <p>Estado: {{ orderDetails.estado }}</p>
              <!-- Mostrar la lista de productos en el pedido -->
              <ul>
                <li *ngFor="let product of orderDetails.productos">
                  <p>Nombre del Producto: {{ product.nombre }}</p>
                  <p>Tamaño: {{ product.size }}</p>
                  <p>Sabor: {{ product.flavor }}</p>
                  <p>Talla: {{ product.sizes }}</p>
                  <p>Precio: {{ product.price }}</p>
                  <p>Total: {{ product.total }}</p>
                  
                </li>
              </ul>
              
              <!-- Agregar más detalles según tu estructura de datos de producto en el pedido -->
            </div>
          </div>
        </li>
      </ul>
      <p *ngIf="!userOrders || userOrders.length === 0">No tienes pedidos.</p>
    </div>
    

    <h2 *ngIf="selectedModule === 'addresses'">Direcciones</h2>
    <div *ngIf="selectedModule === 'addresses'" class="module-content">
      <ul *ngIf="userAddresses && userAddresses.length > 0">
        <li *ngFor="let address of userAddresses">
          <!-- Mostrar información de cada dirección aquí -->
          <p>Dirección: {{ address.direccion }}</p>
          <p>Ciudad: {{ address.ciudad }}</p>
          <p>Departamento: {{ address.departamento }}</p>
          <!-- Agregar más detalles según tu estructura de datos de dirección -->
        </li>
      </ul>
      <p *ngIf="!userAddresses || userAddresses.length === 0">No tienes direcciones guardadas.</p>
    </div>

    <h2 *ngIf="selectedModule === 'account'">Detalles de la Cuenta</h2>
    <div *ngIf="selectedModule === 'account'" class="module-content">
      <!-- Detalles de la Cuenta module content -->
    </div>

    <h2 *ngIf="selectedModule === 'wishlist'">Lista de Deseos</h2>
    <div *ngIf="selectedModule === 'wishlist'" class="module-content">
      <!-- Lista de Deseos module content -->
    </div>

    <div *ngIf="selectedModule === 'logout'" class="module-content">
      <button type="button" class="btn btn-primary" (click)="logout()">Logout</button>
    </div>
  </div>
</div>


/* src\app\components\user-panel\user-panel.component.scss */

@import '~bootstrap/dist/css/bootstrap.min.css';

.container {
  display: flex;

  .menu {
    width: 200px;
    background-color: #f2f2f2;
    padding: 10px;
    border-right: 1px solid #ccc;

    .menu-items {
      list-style-type: none;
      padding: 0;
      margin: 0;

      .menu-item {
        cursor: pointer;
        padding: 5px;
        border-radius: 5px;
        margin-bottom: 5px;
        font-weight: bold;
        color: #000;
        background-color: #fff;
        transition: background-color 0.3s;

        &:hover {
          background-color: #e0e0e0;
        }
      }
    }
  }

  .content {
    flex: 1;
    padding: 10px;
  }
}

// Rest of the styles...


/* src\app\dashboard\dashboard\dashboard.component.html */

<!-- dashboard.component.html -->
<div class="wrapper">
  <!-- Sidebar -->
  <nav id="sidebar" class="sidebar">
    <div class="sidebar-header">
      <h3>Dashboard</h3>
    </div>

    <ul class="list-unstyled components">
      <li (click)="showContent('product')" class="active">
        <a>Gestión de Productos</a>
      </li>
      <li (click)="showContent('order')">
        <a>Gestión de Pedidos</a>
      </li>
      <li (click)="showContent('shipment')">
        <a>Gestión de Despachos</a>
      </li>
      <li (click)="showContent('invoice')">
        <a>Gestión de Facturación</a>
      </li>
      <!-- Agrega más enlaces según tus necesidades -->
    </ul>
  </nav>

  <!-- Page Content -->
  <div id="content" class="content">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">
      </div>
    </nav>

    <ng-container [ngSwitch]="selectedContent">
      <div *ngSwitchCase="'product'" class="content-section">
        <!-- Contenido de Gestión de Productos -->
        <app-product-management></app-product-management>
        <!-- Utiliza el componente ProductManagementComponent aquí -->
      </div>
      <div *ngSwitchCase="'order'" class="content-section">
        <!-- Contenido de Gestión de Pedidos -->
        <app-order-management></app-order-management>
        <!-- Agrega el contenido de gestión de pedidos aquí -->
      </div>
      <div *ngSwitchCase="'shipment'" class="content-section">
        <!-- Contenido de Gestión de Despachos -->
        <app-shipment-management></app-shipment-management>
        <!-- Agrega el contenido de gestión de despachos aquí -->
      </div>
      <div *ngSwitchCase="'invoice'" class="content-section">
        <!-- Contenido de Gestión de Facturación -->
        <app-invoice-management></app-invoice-management>
        <!-- Agrega el contenido de gestión de facturación aquí -->
      </div>
    </ng-container>
  </div>
</div>


/* src\app\dashboard\dashboard\dashboard.component.scss */

/* Estilo para el body y el contenido principal */
body {
  font-family: 'Open Sans', sans-serif;
  margin: 0;
  padding: 0;
}

.wrapper {
  display: flex;
  width: 100%;
}

#sidebar {
  min-width: 250px;
  max-width: 250px;
  background-color: #333;
  color: #fff;
  transition: all 0.3s;
}

#sidebar.active {
  margin-left: -250px;
}

#content {
  width: 100%;
  padding: 15px;
}

.navbar {
  background-color: #fff;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
}

/* Estilo para el botón de mostrar/ocultar menú */
#sidebarCollapse {
  background-color: #333;
  color: #fff;
  border: none;
  padding: 10px 15px;
  cursor: pointer;
}

/* Estilo para los enlaces del menú lateral */
.sidebar ul.components {
  padding: 20px 0;
}

.sidebar ul p {
  padding: 10px;
  font-size: 1.1em;
}

.sidebar ul li {
  padding: 10px;
  font-size: 1.2em;
  display: block;
}

.sidebar ul li.active {
  background-color: #fff;
  color: #333;
}

/* Estilo para el contenido principal */
.content-section {
  padding: 20px;
}

/* Agrega estilos adicionales según sea necesario */


/* src\app\dashboard\invoice-management\invoice-management.component.html */

<p>invoice-management works!</p>


/* src\app\dashboard\invoice-management\invoice-management.component.scss */



/* src\app\dashboard\order-management\order-management.component.html */

<p>order-management works!</p>


/* src\app\dashboard\order-management\order-management.component.scss */



/* src\app\dashboard\product-management\product-management.component.html */

<div class="container">
  <h2>Gestión de Productos</h2>

  <!-- Formulario para agregar/editar un producto -->
  <form (submit)="editingProduct ? updateProduct() : addProduct()">
    <div class="form-group">
      <label for="productName">Nombre del Producto:</label>
      <input type="text" class="form-control" id="productName" name="productName"[(ngModel)]="newProduct.name" required>
    </div>
    <div class="form-group">
      <label for="productDescription">Descripción del Producto:</label>
      <textarea class="form-control" id="productDescription" name="productDescription" [(ngModel)]="newProduct.description"></textarea>
    </div>
    <div class="form-group">
      <label for="productBrand">Marca:</label>
      <input type="text" class="form-control" id="productBrand" name="productBrand" [(ngModel)]="newProduct.brand">
    </div>
    <div class="form-group">
      <label for="productCategory">Categoría:</label>
      <input type="text" class="form-control" id="productCategory" name="productCategory" [(ngModel)]="newProduct.category">
    </div>
    <div class="form-group">
      <label for="productDiscount">Descuento:</label>
      <input type="number" class="form-control" id="productDiscount" name="productDiscount" [(ngModel)]="newProduct.discount">
    </div>
    <div class="form-group">
      <label for="productFlavors">Sabores (separados por comas):</label>
      <input type="text" class="form-control" id="productFlavors" name="productFlavors" [(ngModel)]="newProduct.flavors">
    </div>
    <div class="form-group">
      <label for="productImageUrl">URL de la imagen (separados por comas):</label>
      <input type="text" class="form-control" id="productImageUrl" name="productImageUrl" [(ngModel)]="newProduct.imageUrl">
    </div>
    <div class="form-group">
      <label for="productPrice">Precio:</label>
      <input type="number" class="form-control" id="productPrice" name="productPrice" [(ngModel)]="newProduct.price">
    </div>
    <div class="form-group">
      <label for="productSize">Tamaño:</label>
      <input type="text" class="form-control" id="productSize" name="productSize" [(ngModel)]="newProduct.size">
    </div>
    <div class="form-group">
      <label for="productStock">Cantidad en Stock:</label>
      <input type="number" class="form-control" id="productStock" name="productStock" [(ngModel)]="newProduct.stock">
    </div>

    <!-- Agrega otros campos según sea necesario -->

    <!-- Botón para agregar o guardar cambios según si se está editando o agregando -->
    <button type="submit" class="btn btn-primary">
      {{ editingProduct ? 'Guardar Cambios' : 'Agregar Producto' }}
    </button>
  </form>

  <!-- Lista de productos existentes -->
  <ul class="list-group mt-4">
    <li class="list-group-item" *ngFor="let product of products">
      <h5>{{ product.name }}</h5>
      <p>{{ product.description }}</p>
      <button class="btn btn-sm btn-warning" (click)="editProduct(product)">Editar</button>
      <button class="btn btn-sm btn-danger" (click)="deleteProduct(product)">Eliminar</button>
    </li>
  </ul>
</div>

/* src\app\dashboard\product-management\product-management.component.scss */

.container {
    padding: 20px;
  }
  
  h2 {
    margin-bottom: 20px;
  }
  
  .row {
    margin-top: 20px;
  }
  
  .col-md-6 {
    border: 1px solid #ccc;
    padding: 10px;
  }
  
  .router-link-active {
    font-weight: bold;
  }
  
/* Estilo personalizado para las notificaciones ngx-toastr */
.custom-toast {
  position: absolute;
  
 
top: 0;
  right: 0;
  width: 300px; /* Personaliza el ancho según tus preferencias */
  margin: 20px;
  
 
z-index: 9999; /* Asegura que las notificaciones estén en la parte superior */
}

/* src\app\dashboard\shipment-management\shipment-management.component.html */

<p>shipment-management works!</p>


/* src\app\dashboard\shipment-management\shipment-management.component.scss */



/* src\app\dashboard\sidebar\sidebar.component.html */

<p>sidebar works!</p>


/* src\app\dashboard\sidebar\sidebar.component.scss */

